{"ast":null,"code":"var _jsxFileName = \"/Users/meeqatsuharwardy/stock-data-viewer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StockApp() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [messages, setMessages] = useState([]); // Store all chats as an array of messages\n\n  const appendMessage = (text, type) => {\n    setMessages(messages => [...messages, {\n      text,\n      type\n    }]);\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    appendMessage(`Query: ${query}`, \"query\"); // Append user query as a new message\n    const formData = new URLSearchParams();\n    formData.append(\"question\", query);\n    try {\n      const res = await fetch(\"http://127.0.0.1:5000/stock_data\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: formData\n      });\n      const result = await res.json();\n      if (result.success) {\n        if (result.description) {\n          appendMessage(result.description, \"description\");\n        }\n        if (result.need_chart) {\n          fetchChart(result.symbol);\n        } else {\n          appendMessage(`Stock Price: ${result.price}`, \"response\");\n        }\n      } else {\n        appendMessage(`Error: ${result.error}`, \"error\");\n      }\n    } catch (error) {\n      appendMessage(`Error sending request: ${error.message}`, \"error\");\n    }\n  };\n  const fetchChart = async symbol => {\n    try {\n      const res = await fetch(`http://127.0.0.1:5000/stock_chart?symbol=${symbol}&period=6mo`);\n      const data = await res.json();\n      if (data.success) {\n        appendMessage(\"Chart fetched successfully. Displaying below.\", \"chart-info\");\n        setMessages(messages => [...messages, {\n          text: \"Chart data\",\n          type: \"chart\",\n          chartOptions: {\n            chart: {\n              type: \"line\"\n            },\n            title: {\n              text: \"Stock Price Chart\"\n            },\n            xAxis: {\n              type: \"datetime\",\n              dateTimeLabelFormats: {\n                month: \"%e. %b\",\n                year: \"%b\"\n              }\n            },\n            yAxis: {\n              title: {\n                text: \"Price ($)\"\n              }\n            },\n            series: [{\n              name: symbol,\n              data: data.prices.map((price, index) => [Date.parse(data.dates[index]), price])\n            }]\n          }\n        }]);\n      } else {\n        appendMessage(`Error fetching chart: ${data.error}`, \"error\");\n      }\n    } catch (error) {\n      appendMessage(`Error sending request: ${error.message}`, \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5\",\n      children: \"Stock Chat Query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter your query:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"E.g., What is the stock price of Apple or Draw high charts of Apple\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit Query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => msg.type === \"chart\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n          highcharts: Highcharts,\n          constructorType: \"stockChart\",\n          options: msg.chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-${msg.type === \"error\" ? \"danger\" : \"secondary\"} mt-3`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(StockApp, \"8yH7+QJkqqDtC5K0qsGO5dDQIQY=\");\n_c = StockApp;\nexport default StockApp;\nvar _c;\n$RefreshReg$(_c, \"StockApp\");","map":{"version":3,"names":["React","useState","Highcharts","HighchartsReact","jsxDEV","_jsxDEV","StockApp","_s","query","setQuery","messages","setMessages","appendMessage","text","type","handleFormSubmit","event","preventDefault","formData","URLSearchParams","append","res","fetch","method","headers","body","result","json","success","description","need_chart","fetchChart","symbol","price","error","message","data","chartOptions","chart","title","xAxis","dateTimeLabelFormats","month","year","yAxis","series","name","prices","map","index","Date","parse","dates","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","e","target","placeholder","required","msg","highcharts","constructorType","options","_c","$RefreshReg$"],"sources":["/Users/meeqatsuharwardy/stock-data-viewer/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction StockApp() {\n  const [query, setQuery] = useState(\"\");\n  const [messages, setMessages] = useState([]); // Store all chats as an array of messages\n\n  const appendMessage = (text, type) => {\n    setMessages((messages) => [...messages, { text, type }]);\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    appendMessage(`Query: ${query}`, \"query\"); // Append user query as a new message\n    const formData = new URLSearchParams();\n    formData.append(\"question\", query);\n    try {\n      const res = await fetch(\"http://127.0.0.1:5000/stock_data\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        body: formData,\n      });\n      const result = await res.json();\n      if (result.success) {\n        if (result.description) {\n          appendMessage(result.description, \"description\");\n        }\n        if (result.need_chart) {\n          fetchChart(result.symbol);\n        } else {\n          appendMessage(`Stock Price: ${result.price}`, \"response\");\n        }\n      } else {\n        appendMessage(`Error: ${result.error}`, \"error\");\n      }\n    } catch (error) {\n      appendMessage(`Error sending request: ${error.message}`, \"error\");\n    }\n  };\n\n  const fetchChart = async (symbol) => {\n    try {\n      const res = await fetch(\n        `http://127.0.0.1:5000/stock_chart?symbol=${symbol}&period=6mo`\n      );\n      const data = await res.json();\n      if (data.success) {\n        appendMessage(\n          \"Chart fetched successfully. Displaying below.\",\n          \"chart-info\"\n        );\n        setMessages((messages) => [\n          ...messages,\n          {\n            text: \"Chart data\",\n            type: \"chart\",\n            chartOptions: {\n              chart: { type: \"line\" },\n              title: { text: \"Stock Price Chart\" },\n              xAxis: {\n                type: \"datetime\",\n                dateTimeLabelFormats: { month: \"%e. %b\", year: \"%b\" },\n              },\n              yAxis: { title: { text: \"Price ($)\" } },\n              series: [\n                {\n                  name: symbol,\n                  data: data.prices.map((price, index) => [\n                    Date.parse(data.dates[index]),\n                    price,\n                  ]),\n                },\n              ],\n            },\n          },\n        ]);\n      } else {\n        appendMessage(`Error fetching chart: ${data.error}`, \"error\");\n      }\n    } catch (error) {\n      appendMessage(`Error sending request: ${error.message}`, \"error\");\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2 className=\"mt-5\">Stock Chat Query</h2>\n      <form onSubmit={handleFormSubmit} className=\"mb-3\">\n        <div className=\"form-group\">\n          <label>Enter your query:</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"E.g., What is the stock price of Apple or Draw high charts of Apple\"\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit Query\n        </button>\n      </form>\n      <div>\n        {messages.map((msg, index) =>\n          msg.type === \"chart\" ? (\n            <div key={index}>\n              <HighchartsReact\n                highcharts={Highcharts}\n                constructorType={\"stockChart\"}\n                options={msg.chartOptions}\n              />\n            </div>\n          ) : (\n            <div\n              key={index}\n              className={`alert alert-${\n                msg.type === \"error\" ? \"danger\" : \"secondary\"\n              } mt-3`}\n            >\n              {msg.text}\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default StockApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}