{"ast":null,"code":"var _jsxFileName = \"/Users/meeqatsuharwardy/project/Frontend/src/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport \"./main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StockApp() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const appendMessage = (text, type, options = {}) => {\n    setMessages(messages => [...messages, {\n      text,\n      type,\n      ...options\n    }]);\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    if (query.trim() !== \"\") {\n      appendMessage(query, \"user\");\n      const formData = new URLSearchParams();\n      formData.append(\"question\", query);\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/stock_data\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          body: formData\n        });\n        const result = await response.json();\n        if (result.success) {\n          appendMessage(result.need_chart ? result.description : `The stock price is ${result.price}.`, \"system\");\n          result.need_chart && fetchChart(result.symbol);\n        } else {\n          appendMessage(`Error: ${result.error}`, \"error\");\n        }\n      } catch (error) {\n        appendMessage(`Network Error: ${error.message}`, \"error\");\n      }\n      setQuery(\"\");\n    }\n  };\n  const fetchChart = async symbol => {\n    const response = await fetch(`http://127.0.0.1:5000/stock_chart?symbol=${symbol}&period=6mo`);\n    const data = await response.json();\n    if (data.success) {\n      appendMessage(\"\", \"chart\", {\n        chartOptions: {\n          ...chartOptions,\n          series: [{\n            name: symbol,\n            data: data.prices.map((price, index) => [Date.parse(data.dates[index]), price])\n          }]\n        }\n      });\n    } else {\n      appendMessage(`Error fetching chart: ${data.error}`, \"error\");\n    }\n  };\n  const chartOptions = {\n    chart: {\n      type: \"line\",\n      backgroundColor: \"#11161C\"\n    },\n    title: {\n      text: \"Stock Price Chart\"\n    },\n    xAxis: {\n      type: \"datetime\",\n      dateTimeLabelFormats: {\n        month: \"%e. %b\",\n        year: \"%b\"\n      }\n    },\n    yAxis: {\n      title: {\n        text: \"Price ($)\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-display-area\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: msg.type === \"chart\" && msg.chartOptions ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message chart-message\",\n          children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n            highcharts: Highcharts,\n            constructorType: \"stockChart\",\n            options: msg.chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.type}-message`,\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"text-input\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Ask the Solvent Life neural network\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleFormSubmit,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(StockApp, \"8yH7+QJkqqDtC5K0qsGO5dDQIQY=\");\n_c = StockApp;\nexport default StockApp;\nvar _c;\n$RefreshReg$(_c, \"StockApp\");","map":{"version":3,"names":["React","useState","Highcharts","HighchartsReact","jsxDEV","_jsxDEV","StockApp","_s","query","setQuery","messages","setMessages","appendMessage","text","type","options","handleFormSubmit","event","preventDefault","trim","formData","URLSearchParams","append","response","fetch","method","headers","body","result","json","success","need_chart","description","price","fetchChart","symbol","error","message","data","chartOptions","series","name","prices","map","index","Date","parse","dates","chart","backgroundColor","title","xAxis","dateTimeLabelFormats","month","year","yAxis","className","children","msg","Fragment","highcharts","constructorType","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/meeqatsuharwardy/project/Frontend/src/ChatWindow.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport \"./main.css\";\n\nfunction StockApp() {\n  const [query, setQuery] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const appendMessage = (text, type, options = {}) => {\n    setMessages((messages) => [...messages, { text, type, ...options }]);\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    if (query.trim() !== \"\") {\n      appendMessage(query, \"user\");\n      const formData = new URLSearchParams();\n      formData.append(\"question\", query);\n\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/stock_data\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n          body: formData,\n        });\n        const result = await response.json();\n        if (result.success) {\n          appendMessage(\n            result.need_chart\n              ? result.description\n              : `The stock price is ${result.price}.`,\n            \"system\"\n          );\n          result.need_chart && fetchChart(result.symbol);\n        } else {\n          appendMessage(`Error: ${result.error}`, \"error\");\n        }\n      } catch (error) {\n        appendMessage(`Network Error: ${error.message}`, \"error\");\n      }\n      setQuery(\"\");\n    }\n  };\n\n  const fetchChart = async (symbol) => {\n    const response = await fetch(\n      `http://127.0.0.1:5000/stock_chart?symbol=${symbol}&period=6mo`\n    );\n    const data = await response.json();\n    if (data.success) {\n      appendMessage(\"\", \"chart\", {\n        chartOptions: {\n          ...chartOptions,\n          series: [\n            {\n              name: symbol,\n              data: data.prices.map((price, index) => [\n                Date.parse(data.dates[index]),\n                price,\n              ]),\n            },\n          ],\n        },\n      });\n    } else {\n      appendMessage(`Error fetching chart: ${data.error}`, \"error\");\n    }\n  };\n\n  const chartOptions = {\n    chart: { type: \"line\", backgroundColor: \"#11161C\" },\n    title: { text: \"Stock Price Chart\" },\n    xAxis: {\n      type: \"datetime\",\n      dateTimeLabelFormats: { month: \"%e. %b\", year: \"%b\" },\n    },\n    yAxis: { title: { text: \"Price ($)\" } },\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"message-display-area\">\n        {messages.map((msg, index) => (\n          <React.Fragment key={index}>\n            {msg.type === \"chart\" && msg.chartOptions ? (\n              <div className=\"message chart-message\">\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  constructorType=\"stockChart\"\n                  options={msg.chartOptions}\n                />\n              </div>\n            ) : (\n              <div className={`message ${msg.type}-message`}>{msg.text}</div>\n            )}\n          </React.Fragment>\n        ))}\n      </div>\n      <div className=\"input-area\">\n        <input\n          type=\"text\"\n          className=\"text-input\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"Ask the Solvent Life neural network\"\n        />\n        <button\n          type=\"button\"\n          onClick={handleFormSubmit}\n          className=\"send-button\"\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default StockApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,aAAa,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;IAClDJ,WAAW,CAAED,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE;MAAEG,IAAI;MAAEC,IAAI;MAAE,GAAGC;IAAQ,CAAC,CAAC,CAAC;EACtE,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIV,KAAK,CAACW,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvBP,aAAa,CAACJ,KAAK,EAAE,MAAM,CAAC;MAC5B,MAAMY,QAAQ,GAAG,IAAIC,eAAe,CAAC,CAAC;MACtCD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEd,KAAK,CAAC;MAElC,IAAI;QACF,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;UAC/DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAoC,CAAC;UAChEC,IAAI,EAAEP;QACR,CAAC,CAAC;QACF,MAAMQ,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACpC,IAAID,MAAM,CAACE,OAAO,EAAE;UAClBlB,aAAa,CACXgB,MAAM,CAACG,UAAU,GACbH,MAAM,CAACI,WAAW,GACjB,sBAAqBJ,MAAM,CAACK,KAAM,GAAE,EACzC,QACF,CAAC;UACDL,MAAM,CAACG,UAAU,IAAIG,UAAU,CAACN,MAAM,CAACO,MAAM,CAAC;QAChD,CAAC,MAAM;UACLvB,aAAa,CAAE,UAASgB,MAAM,CAACQ,KAAM,EAAC,EAAE,OAAO,CAAC;QAClD;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdxB,aAAa,CAAE,kBAAiBwB,KAAK,CAACC,OAAQ,EAAC,EAAE,OAAO,CAAC;MAC3D;MACA5B,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,MAAMyB,UAAU,GAAG,MAAOC,MAAM,IAAK;IACnC,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CACzB,4CAA2CW,MAAO,aACrD,CAAC;IACD,MAAMG,IAAI,GAAG,MAAMf,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,IAAIS,IAAI,CAACR,OAAO,EAAE;MAChBlB,aAAa,CAAC,EAAE,EAAE,OAAO,EAAE;QACzB2B,YAAY,EAAE;UACZ,GAAGA,YAAY;UACfC,MAAM,EAAE,CACN;YACEC,IAAI,EAAEN,MAAM;YACZG,IAAI,EAAEA,IAAI,CAACI,MAAM,CAACC,GAAG,CAAC,CAACV,KAAK,EAAEW,KAAK,KAAK,CACtCC,IAAI,CAACC,KAAK,CAACR,IAAI,CAACS,KAAK,CAACH,KAAK,CAAC,CAAC,EAC7BX,KAAK,CACN;UACH,CAAC;QAEL;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACLrB,aAAa,CAAE,yBAAwB0B,IAAI,CAACF,KAAM,EAAC,EAAE,OAAO,CAAC;IAC/D;EACF,CAAC;EAED,MAAMG,YAAY,GAAG;IACnBS,KAAK,EAAE;MAAElC,IAAI,EAAE,MAAM;MAAEmC,eAAe,EAAE;IAAU,CAAC;IACnDC,KAAK,EAAE;MAAErC,IAAI,EAAE;IAAoB,CAAC;IACpCsC,KAAK,EAAE;MACLrC,IAAI,EAAE,UAAU;MAChBsC,oBAAoB,EAAE;QAAEC,KAAK,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAK;IACtD,CAAC;IACDC,KAAK,EAAE;MAAEL,KAAK,EAAE;QAAErC,IAAI,EAAE;MAAY;IAAE;EACxC,CAAC;EAED,oBACER,OAAA;IAAKmD,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BpD,OAAA;MAAKmD,SAAS,EAAC,sBAAsB;MAAAC,QAAA,EAClC/C,QAAQ,CAACiC,GAAG,CAAC,CAACe,GAAG,EAAEd,KAAK,kBACvBvC,OAAA,CAACL,KAAK,CAAC2D,QAAQ;QAAAF,QAAA,EACZC,GAAG,CAAC5C,IAAI,KAAK,OAAO,IAAI4C,GAAG,CAACnB,YAAY,gBACvClC,OAAA;UAAKmD,SAAS,EAAC,uBAAuB;UAAAC,QAAA,eACpCpD,OAAA,CAACF,eAAe;YACdyD,UAAU,EAAE1D,UAAW;YACvB2D,eAAe,EAAC,YAAY;YAC5B9C,OAAO,EAAE2C,GAAG,CAACnB;UAAa;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,gBAEN5D,OAAA;UAAKmD,SAAS,EAAG,WAAUE,GAAG,CAAC5C,IAAK,UAAU;UAAA2C,QAAA,EAAEC,GAAG,CAAC7C;QAAI;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAC/D,GAXkBrB,KAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYV,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN5D,OAAA;MAAKmD,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBpD,OAAA;QACES,IAAI,EAAC,MAAM;QACX0C,SAAS,EAAC,YAAY;QACtBU,KAAK,EAAE1D,KAAM;QACb2D,QAAQ,EAAGC,CAAC,IAAK3D,QAAQ,CAAC2D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,WAAW,EAAC;MAAqC;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACF5D,OAAA;QACES,IAAI,EAAC,QAAQ;QACbyD,OAAO,EAAEvD,gBAAiB;QAC1BwC,SAAS,EAAC,aAAa;QAAAC,QAAA,EACxB;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1D,EAAA,CAhHQD,QAAQ;AAAAkE,EAAA,GAARlE,QAAQ;AAkHjB,eAAeA,QAAQ;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}