{"ast":null,"code":"var _jsxFileName = \"/Users/meeqatsuharwardy/stock-data-viewer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StockApp() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  const [chartData, setChartData] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const formData = new URLSearchParams();\n    formData.append(\"question\", query);\n    try {\n      const res = await fetch(\"http://127.0.0.1:5000/stock_data\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: formData\n      });\n      const result = await res.json();\n      if (result.success) {\n        setDescription(result.description || \"\");\n        if (result.need_chart) {\n          setShowChartOptions(true);\n          fetchChart(result.symbol);\n        } else {\n          setShowChartOptions(false);\n          setResponse(`Stock Price: ${result.price}`);\n        }\n      } else {\n        setResponse(`Error: ${result.error}`);\n      }\n    } catch (error) {\n      setResponse(`Error sending request: ${error.message}`);\n    }\n  };\n  const fetchChart = async symbol => {\n    try {\n      const res = await fetch(`http://127.0.0.1:5000/stock_chart?symbol=${symbol}&period=6mo`);\n      const data = await res.json();\n      if (data.success) {\n        setChartData({\n          chart: {\n            type: \"line\"\n          },\n          title: {\n            text: \"Stock Price Chart\"\n          },\n          xAxis: {\n            type: \"datetime\",\n            dateTimeLabelFormats: {\n              month: \"%e. %b\",\n              year: \"%b\"\n            }\n          },\n          yAxis: {\n            title: {\n              text: \"Price ($)\"\n            }\n          },\n          series: [{\n            name: symbol,\n            data: data.prices.map((price, index) => [Date.parse(data.dates[index]), price])\n          }]\n        });\n      } else {\n        alert(\"Error: \" + data.error);\n      }\n    } catch (error) {\n      alert(\"Error sending request: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5\",\n      children: \"Stock Chart Query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter your query:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"E.g., What is the stock price of Apple or Draw high charts of Apple\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Get Stock Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info mt-3\",\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 20\n    }, this), description && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-secondary mt-3\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), showChartOptions && chartData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n        highcharts: Highcharts,\n        constructorType: \"stockChart\",\n        options: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(StockApp, \"RjIiNKaaZDTDBAmwOrgBCm6E31w=\");\n_c = StockApp;\nexport default StockApp;\nvar _c;\n$RefreshReg$(_c, \"StockApp\");","map":{"version":3,"names":["React","useState","Highcharts","HighchartsReact","jsxDEV","_jsxDEV","StockApp","_s","query","setQuery","response","setResponse","showChartOptions","setShowChartOptions","chartData","setChartData","description","setDescription","handleFormSubmit","event","preventDefault","formData","URLSearchParams","append","res","fetch","method","headers","body","result","json","success","need_chart","fetchChart","symbol","price","error","message","data","chart","type","title","text","xAxis","dateTimeLabelFormats","month","year","yAxis","series","name","prices","map","index","Date","parse","dates","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","e","target","placeholder","required","highcharts","constructorType","options","_c","$RefreshReg$"],"sources":["/Users/meeqatsuharwardy/stock-data-viewer/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction StockApp() {\n  const [query, setQuery] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  const [chartData, setChartData] = useState(null);\n  const [description, setDescription] = useState(\"\");\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new URLSearchParams();\n    formData.append(\"question\", query);\n    try {\n      const res = await fetch(\"http://127.0.0.1:5000/stock_data\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        body: formData,\n      });\n      const result = await res.json();\n      if (result.success) {\n        setDescription(result.description || \"\");\n        if (result.need_chart) {\n          setShowChartOptions(true);\n          fetchChart(result.symbol);\n        } else {\n          setShowChartOptions(false);\n          setResponse(`Stock Price: ${result.price}`);\n        }\n      } else {\n        setResponse(`Error: ${result.error}`);\n      }\n    } catch (error) {\n      setResponse(`Error sending request: ${error.message}`);\n    }\n  };\n\n  const fetchChart = async (symbol) => {\n    try {\n      const res = await fetch(\n        `http://127.0.0.1:5000/stock_chart?symbol=${symbol}&period=6mo`\n      );\n      const data = await res.json();\n      if (data.success) {\n        setChartData({\n          chart: { type: \"line\" },\n          title: { text: \"Stock Price Chart\" },\n          xAxis: {\n            type: \"datetime\",\n            dateTimeLabelFormats: { month: \"%e. %b\", year: \"%b\" },\n          },\n          yAxis: { title: { text: \"Price ($)\" } },\n          series: [\n            {\n              name: symbol,\n              data: data.prices.map((price, index) => [\n                Date.parse(data.dates[index]),\n                price,\n              ]),\n            },\n          ],\n        });\n      } else {\n        alert(\"Error: \" + data.error);\n      }\n    } catch (error) {\n      alert(\"Error sending request: \" + error.message);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2 className=\"mt-5\">Stock Chart Query</h2>\n      <form onSubmit={handleFormSubmit} className=\"mb-3\">\n        <div className=\"form-group\">\n          <label>Enter your query:</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"E.g., What is the stock price of Apple or Draw high charts of Apple\"\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Get Stock Data\n        </button>\n      </form>\n      {response && <div className=\"alert alert-info mt-3\">{response}</div>}\n      {description && (\n        <div className=\"alert alert-secondary mt-3\">{description}</div>\n      )}\n      {showChartOptions && chartData && (\n        <div>\n          <HighchartsReact\n            highcharts={Highcharts}\n            constructorType={\"stockChart\"}\n            options={chartData}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default StockApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}