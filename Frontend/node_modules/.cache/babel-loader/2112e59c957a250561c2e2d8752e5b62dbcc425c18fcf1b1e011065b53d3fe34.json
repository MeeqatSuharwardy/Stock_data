{"ast":null,"code":"var _jsxFileName = \"/Users/meeqatsuharwardy/stock-data-viewer/src/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport \"./main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StockApp() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const appendMessage = (text, type, options = {}) => {\n    setMessages(messages => [...messages, {\n      text,\n      type,\n      ...options\n    }]);\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    appendMessage(query, \"user\");\n    const formData = new URLSearchParams();\n    formData.append(\"question\", query);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/stock_data\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: formData\n      });\n      const result = await response.json();\n      if (result.success) {\n        if (result.need_chart) {\n          fetchChart(result.symbol);\n        } else {\n          appendMessage(`Stock Price: ${result.price}`, \"system\");\n        }\n      } else {\n        appendMessage(`Error: ${result.error}`, \"error\");\n      }\n    } catch (error) {\n      appendMessage(`Network Error: ${error.message}`, \"error\");\n    }\n    setQuery(\"\"); // Reset query input after submission\n  };\n  const fetchChart = async symbol => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/stock_chart?symbol=${symbol}&period=6mo`);\n      const data = await response.json();\n      if (data.success) {\n        appendMessage(\"Chart fetched successfully. Displaying below.\", \"system\", {\n          chartOptions: {\n            chart: {\n              type: \"line\"\n            },\n            title: {\n              text: \"Stock Price Chart\"\n            },\n            xAxis: {\n              type: \"datetime\",\n              dateTimeLabelFormats: {\n                month: \"%e. %b\",\n                year: \"%b\"\n              }\n            },\n            yAxis: {\n              title: {\n                text: \"Price ($)\"\n              }\n            },\n            series: [{\n              name: symbol,\n              data: data.prices.map((price, index) => [Date.parse(data.dates[index]), price])\n            }]\n          }\n        });\n      } else {\n        appendMessage(`Error fetching chart: ${data.error}`, \"error\");\n      }\n    } catch (error) {\n      appendMessage(`Network Error: ${error.message}`, \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-display-area\",\n      children: messages.map((msg, index) => msg.type === \"chart\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message chart-message\",\n        children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n          highcharts: Highcharts,\n          constructorType: \"stockChart\",\n          options: msg.chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.type}-message`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"text-input\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Enter stock query (e.g., Apple stock price)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(StockApp, \"8yH7+QJkqqDtC5K0qsGO5dDQIQY=\");\n_c = StockApp;\nexport default StockApp;\nvar _c;\n$RefreshReg$(_c, \"StockApp\");","map":{"version":3,"names":["React","useState","Highcharts","HighchartsReact","jsxDEV","_jsxDEV","StockApp","_s","query","setQuery","messages","setMessages","appendMessage","text","type","options","handleFormSubmit","event","preventDefault","formData","URLSearchParams","append","response","fetch","method","headers","body","result","json","success","need_chart","fetchChart","symbol","price","error","message","data","chartOptions","chart","title","xAxis","dateTimeLabelFormats","month","year","yAxis","series","name","prices","map","index","Date","parse","dates","className","children","msg","highcharts","constructorType","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/meeqatsuharwardy/stock-data-viewer/src/ChatWindow.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport \"./main.css\";\n\nfunction StockApp() {\n  const [query, setQuery] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const appendMessage = (text, type, options = {}) => {\n    setMessages((messages) => [...messages, { text, type, ...options }]);\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    appendMessage(query, \"user\");\n    const formData = new URLSearchParams();\n    formData.append(\"question\", query);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/stock_data\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        body: formData,\n      });\n      const result = await response.json();\n      if (result.success) {\n        if (result.need_chart) {\n          fetchChart(result.symbol);\n        } else {\n          appendMessage(`Stock Price: ${result.price}`, \"system\");\n        }\n      } else {\n        appendMessage(`Error: ${result.error}`, \"error\");\n      }\n    } catch (error) {\n      appendMessage(`Network Error: ${error.message}`, \"error\");\n    }\n    setQuery(\"\"); // Reset query input after submission\n  };\n\n  const fetchChart = async (symbol) => {\n    try {\n      const response = await fetch(\n        `http://127.0.0.1:5000/stock_chart?symbol=${symbol}&period=6mo`\n      );\n      const data = await response.json();\n      if (data.success) {\n        appendMessage(\n          \"Chart fetched successfully. Displaying below.\",\n          \"system\",\n          {\n            chartOptions: {\n              chart: { type: \"line\" },\n              title: { text: \"Stock Price Chart\" },\n              xAxis: {\n                type: \"datetime\",\n                dateTimeLabelFormats: { month: \"%e. %b\", year: \"%b\" },\n              },\n              yAxis: { title: { text: \"Price ($)\" } },\n              series: [\n                {\n                  name: symbol,\n                  data: data.prices.map((price, index) => [\n                    Date.parse(data.dates[index]),\n                    price,\n                  ]),\n                },\n              ],\n            },\n          }\n        );\n      } else {\n        appendMessage(`Error fetching chart: ${data.error}`, \"error\");\n      }\n    } catch (error) {\n      appendMessage(`Network Error: ${error.message}`, \"error\");\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"message-display-area\">\n        {messages.map((msg, index) =>\n          msg.type === \"chart\" ? (\n            <div key={index} className=\"message chart-message\">\n              <HighchartsReact\n                highcharts={Highcharts}\n                constructorType={\"stockChart\"}\n                options={msg.chartOptions}\n              />\n            </div>\n          ) : (\n            <div key={index} className={`message ${msg.type}-message`}>\n              {msg.text}\n            </div>\n          )\n        )}\n      </div>\n      <form onSubmit={handleFormSubmit} className=\"input-area\">\n        <input\n          type=\"text\"\n          className=\"text-input\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"Enter stock query (e.g., Apple stock price)\"\n        />\n        <button type=\"submit\" className=\"send-button\">\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default StockApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}