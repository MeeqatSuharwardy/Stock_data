{"ast":null,"code":"var _jsxFileName = \"/Users/meeqatsuharwardy/project/Frontend/src/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport \"./main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StockApp() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const appendMessage = (text, type, options = {}) => {\n    setMessages(messages => [...messages, {\n      text,\n      type,\n      ...options\n    }]);\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    if (query.trim() !== \"\") {\n      appendMessage(query, \"user\");\n      const formData = new URLSearchParams();\n      formData.append(\"question\", query);\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/stock_data\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          body: formData\n        });\n        const result = await response.json();\n        if (result.success) {\n          appendMessage(result.description,\n          // Use the description which includes the price and P/E ratio\n          \"system\", result.need_chart ? {\n            chartData: result\n          } : {});\n        } else {\n          appendMessage(`Error: ${result.error}`, \"error\");\n        }\n      } catch (error) {\n        appendMessage(`Network Error: ${error.message}`, \"error\");\n      }\n      setQuery(\"\");\n    }\n  };\n  const chartOptions = {\n    chart: {\n      type: \"line\",\n      backgroundColor: \"#11161C\",\n      style: {\n        fontFamily: \"Arial\"\n      }\n    },\n    title: {\n      text: \"Stock Price Chart\",\n      style: {\n        color: \"white\"\n      }\n    },\n    xAxis: {\n      type: \"datetime\",\n      dateTimeLabelFormats: {\n        month: \"%e. %b\",\n        year: \"%b\"\n      },\n      labels: {\n        style: {\n          color: \"white\"\n        }\n      }\n    },\n    yAxis: {\n      title: {\n        text: \"Price ($)\",\n        style: {\n          color: \"white\"\n        }\n      },\n      labels: {\n        style: {\n          color: \"white\"\n        }\n      }\n    },\n    series: [],\n    credits: {\n      enabled: false\n    } // Disable Highcharts credits\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-display-area\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: msg.type === \"chart\" && msg.chartData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message chart-message\",\n          children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n            highcharts: Highcharts,\n            constructorType: \"stockChart\",\n            options: {\n              ...chartOptions,\n              series: [{\n                name: msg.chartData.symbol,\n                data: msg.chartData.prices.map((price, index) => [Date.parse(msg.chartData.dates[index]), price])\n              }]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.type}-message`,\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"text-input\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Ask about a stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleFormSubmit,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(StockApp, \"8yH7+QJkqqDtC5K0qsGO5dDQIQY=\");\n_c = StockApp;\nexport default StockApp;\nvar _c;\n$RefreshReg$(_c, \"StockApp\");","map":{"version":3,"names":["React","useState","Highcharts","HighchartsReact","jsxDEV","_jsxDEV","StockApp","_s","query","setQuery","messages","setMessages","appendMessage","text","type","options","handleFormSubmit","event","preventDefault","trim","formData","URLSearchParams","append","response","fetch","method","headers","body","result","json","success","description","need_chart","chartData","error","message","chartOptions","chart","backgroundColor","style","fontFamily","title","color","xAxis","dateTimeLabelFormats","month","year","labels","yAxis","series","credits","enabled","className","children","map","msg","index","Fragment","highcharts","constructorType","name","symbol","data","prices","price","Date","parse","dates","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/meeqatsuharwardy/project/Frontend/src/ChatWindow.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport \"./main.css\";\n\nfunction StockApp() {\n  const [query, setQuery] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const appendMessage = (text, type, options = {}) => {\n    setMessages((messages) => [...messages, { text, type, ...options }]);\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    if (query.trim() !== \"\") {\n      appendMessage(query, \"user\");\n      const formData = new URLSearchParams();\n      formData.append(\"question\", query);\n\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/stock_data\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n          body: formData,\n        });\n        const result = await response.json();\n        if (result.success) {\n          appendMessage(\n            result.description, // Use the description which includes the price and P/E ratio\n            \"system\",\n            result.need_chart ? { chartData: result } : {}\n          );\n        } else {\n          appendMessage(`Error: ${result.error}`, \"error\");\n        }\n      } catch (error) {\n        appendMessage(`Network Error: ${error.message}`, \"error\");\n      }\n      setQuery(\"\");\n    }\n  };\n\n  const chartOptions = {\n    chart: {\n      type: \"line\",\n      backgroundColor: \"#11161C\",\n      style: { fontFamily: \"Arial\" },\n    },\n    title: {\n      text: \"Stock Price Chart\",\n      style: { color: \"white\" },\n    },\n    xAxis: {\n      type: \"datetime\",\n      dateTimeLabelFormats: { month: \"%e. %b\", year: \"%b\" },\n      labels: { style: { color: \"white\" } },\n    },\n    yAxis: {\n      title: {\n        text: \"Price ($)\",\n        style: { color: \"white\" },\n      },\n      labels: { style: { color: \"white\" } },\n    },\n    series: [],\n    credits: { enabled: false }, // Disable Highcharts credits\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"message-display-area\">\n        {messages.map((msg, index) => (\n          <React.Fragment key={index}>\n            {msg.type === \"chart\" && msg.chartData ? (\n              <div className=\"message chart-message\">\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  constructorType=\"stockChart\"\n                  options={{\n                    ...chartOptions,\n                    series: [\n                      {\n                        name: msg.chartData.symbol,\n                        data: msg.chartData.prices.map((price, index) => [\n                          Date.parse(msg.chartData.dates[index]),\n                          price,\n                        ]),\n                      },\n                    ],\n                  }}\n                />\n              </div>\n            ) : (\n              <div className={`message ${msg.type}-message`}>{msg.text}</div>\n            )}\n          </React.Fragment>\n        ))}\n      </div>\n      <div className=\"input-area\">\n        <input\n          type=\"text\"\n          className=\"text-input\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"Ask about a stock\"\n        />\n        <button\n          type=\"button\"\n          onClick={handleFormSubmit}\n          className=\"send-button\"\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default StockApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}