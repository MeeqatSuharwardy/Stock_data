{"ast":null,"code":"var _jsxFileName = \"/Users/meeqatsuharwardy/project/Frontend/src/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport \"./main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StockApp() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const appendMessage = (text, type, options = {}) => {\n    setMessages(messages => [...messages, {\n      text,\n      type,\n      ...options\n    }]);\n  };\n  const isSimpleQuery = question => {\n    const simpleQueries = [\"hi\", \"hello\", \"hey\", \"what do you do\", \"who are you\", \"what can you do\", \"what you do\"];\n    return simpleQueries.some(query => question.toLowerCase().includes(query));\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    if (query.trim() === \"\") return;\n    const formData = new URLSearchParams();\n    formData.append(\"question\", query);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/stock_info\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: formData\n      });\n      const result = await response.json();\n      if (result.success) {\n        if (result.response) {\n          // Handling simple responses without charts\n          appendMessage(result.response, \"system\");\n        } else {\n          appendMessage(result.description, \"system\");\n          if (result.need_chart) {\n            appendMessage(\"Stock price chart\", \"chart\", {\n              chartData: result\n            });\n          }\n        }\n      } else {\n        appendMessage(`Error: ${result.error}`, \"error\");\n      }\n    } catch (error) {\n      appendMessage(`Network Error: ${error.message}`, \"error\");\n    }\n    setQuery(\"\"); // Reset query input after submission\n  };\n  const chartOptions = {\n    chart: {\n      type: \"line\",\n      backgroundColor: \"#11161C\",\n      style: {\n        fontFamily: \"Arial\"\n      }\n    },\n    title: {\n      text: \"Stock Price Chart\",\n      style: {\n        color: \"white\"\n      }\n    },\n    xAxis: {\n      type: \"datetime\",\n      dateTimeLabelFormats: {\n        month: \"%e. %b\",\n        year: \"%b\"\n      },\n      labels: {\n        style: {\n          color: \"white\"\n        }\n      }\n    },\n    yAxis: {\n      title: {\n        text: \"Price ($)\",\n        style: {\n          color: \"white\"\n        }\n      },\n      labels: {\n        style: {\n          color: \"white\"\n        }\n      }\n    },\n    series: [],\n    credits: {\n      enabled: false\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-display-area\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: msg.type === \"chart\" && msg.chartData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message chart-message\",\n          children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n            highcharts: Highcharts,\n            constructorType: \"stockChart\",\n            options: {\n              ...chartOptions,\n              series: [{\n                name: msg.chartData.symbol,\n                data: msg.chartData.dates.map((date, index) => [new Date(date).getTime(), msg.chartData.prices[index]])\n              }]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.type}-message`,\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"text-input\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Ask about a stock or say hi!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleFormSubmit,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(StockApp, \"8yH7+QJkqqDtC5K0qsGO5dDQIQY=\");\n_c = StockApp;\nexport default StockApp;\nvar _c;\n$RefreshReg$(_c, \"StockApp\");","map":{"version":3,"names":["React","useState","Highcharts","HighchartsReact","jsxDEV","_jsxDEV","StockApp","_s","query","setQuery","messages","setMessages","appendMessage","text","type","options","isSimpleQuery","question","simpleQueries","some","toLowerCase","includes","handleFormSubmit","event","preventDefault","trim","formData","URLSearchParams","append","response","fetch","method","headers","body","result","json","success","description","need_chart","chartData","error","message","chartOptions","chart","backgroundColor","style","fontFamily","title","color","xAxis","dateTimeLabelFormats","month","year","labels","yAxis","series","credits","enabled","className","children","map","msg","index","Fragment","highcharts","constructorType","name","symbol","data","dates","date","Date","getTime","prices","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/meeqatsuharwardy/project/Frontend/src/ChatWindow.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport \"./main.css\";\n\nfunction StockApp() {\n  const [query, setQuery] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const appendMessage = (text, type, options = {}) => {\n    setMessages((messages) => [...messages, { text, type, ...options }]);\n  };\n\n  const isSimpleQuery = (question) => {\n    const simpleQueries = [\n      \"hi\",\n      \"hello\",\n      \"hey\",\n      \"what do you do\",\n      \"who are you\",\n      \"what can you do\",\n      \"what you do\",\n    ];\n    return simpleQueries.some((query) =>\n      question.toLowerCase().includes(query)\n    );\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    if (query.trim() === \"\") return;\n\n    const formData = new URLSearchParams();\n    formData.append(\"question\", query);\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/stock_info\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        body: formData,\n      });\n      const result = await response.json();\n\n      if (result.success) {\n        if (result.response) {\n          // Handling simple responses without charts\n          appendMessage(result.response, \"system\");\n        } else {\n          appendMessage(result.description, \"system\");\n          if (result.need_chart) {\n            appendMessage(\"Stock price chart\", \"chart\", {\n              chartData: result,\n            });\n          }\n        }\n      } else {\n        appendMessage(`Error: ${result.error}`, \"error\");\n      }\n    } catch (error) {\n      appendMessage(`Network Error: ${error.message}`, \"error\");\n    }\n    setQuery(\"\"); // Reset query input after submission\n  };\n\n  const chartOptions = {\n    chart: {\n      type: \"line\",\n      backgroundColor: \"#11161C\",\n      style: { fontFamily: \"Arial\" },\n    },\n    title: {\n      text: \"Stock Price Chart\",\n      style: { color: \"white\" },\n    },\n    xAxis: {\n      type: \"datetime\",\n      dateTimeLabelFormats: { month: \"%e. %b\", year: \"%b\" },\n      labels: { style: { color: \"white\" } },\n    },\n    yAxis: {\n      title: {\n        text: \"Price ($)\",\n        style: { color: \"white\" },\n      },\n      labels: { style: { color: \"white\" } },\n    },\n    series: [],\n    credits: { enabled: false },\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"message-display-area\">\n        {messages.map((msg, index) => (\n          <React.Fragment key={index}>\n            {msg.type === \"chart\" && msg.chartData ? (\n              <div className=\"message chart-message\">\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  constructorType=\"stockChart\"\n                  options={{\n                    ...chartOptions,\n                    series: [\n                      {\n                        name: msg.chartData.symbol,\n                        data: msg.chartData.dates.map((date, index) => [\n                          new Date(date).getTime(),\n                          msg.chartData.prices[index],\n                        ]),\n                      },\n                    ],\n                  }}\n                />\n              </div>\n            ) : (\n              <div className={`message ${msg.type}-message`}>{msg.text}</div>\n            )}\n          </React.Fragment>\n        ))}\n      </div>\n      <div className=\"input-area\">\n        <input\n          type=\"text\"\n          className=\"text-input\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"Ask about a stock or say hi!\"\n        />\n        <button\n          type=\"button\"\n          onClick={handleFormSubmit}\n          className=\"send-button\"\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default StockApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}